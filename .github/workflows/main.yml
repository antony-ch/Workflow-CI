# Workflow-CI/.github/workflows/main.yml
name: CI/CD MLflow Model Retraining

on:
  push:
    branches:
      - main # Trigger saat ada push ke branch main
  workflow_dispatch: # Memungkinkan trigger manual dari GitHub UI

jobs:
  retrain_model:
    runs-on: ubuntu-latest # Menggunakan runner Ubuntu terbaru

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12.7 # Sesuai permintaan Anda. PASTIKAN INI COCOK DENGAN VERSI PYTHON DI MLProject/conda.yaml!
          activate-environment: mlflow-project-env # Nama env dari conda.yaml
          auto-activate-base: false # Hindari aktivasi base env
          auto-update-conda: true # Pastikan conda up-to-date dan terinisialisasi
          # Baris 'conda-create-envs-file' DIHAPUS karena kita menggunakan 'conda env update' yang lebih robust di langkah berikutnya.

      - name: Install dependencies from conda.yaml
        shell: bash -l {0} # Gunakan login shell untuk memastikan conda terinisialisasi
        run: |
          conda activate mlflow-project-env
          conda env update --file MLProject/conda.yaml # <-- BARIS PENTING: Menginstal/mengupdate semua dependensi dari conda.yaml
          echo "Conda environment updated successfully."

      - name: Verify installed packages (Debugging Step)
        shell: bash -l {0}
        run: |
          conda activate mlflow-project-env
          echo "--- Conda Packages ---"
          conda list | grep dagshub || true # Mencari 'dagshub', '|| true' agar tidak error jika tidak ditemukan
          conda list | grep mlflow || true # Mencari 'mlflow'
          echo "--- Pip Packages ---"
          pip list | grep dagshub || true # Mencari 'dagshub'
          pip list | grep mlflow || true # Mencari 'mlflow'
          echo "--- All Installed Packages (Conda) ---"
          conda list
          echo "--- All Installed Packages (Pip) ---"
          pip list
          echo "--- Verification complete ---"

      - name: Configure DagsHub credentials
        shell: bash -l {0} # Gunakan login shell
        run: |
          conda activate mlflow-project-env # Aktifkan environment lagi untuk step ini
          # Menggunakan secrets untuk username dan token DagsHub
          export MLFLOW_TRACKING_USERNAME="${{ secrets.DAGSHUB_USERNAME }}"
          export MLFLOW_TRACKING_PASSWORD="${{ secrets.DAGSHUB_TOKEN }}"
          export MLFLOW_TRACKING_URI="https://dagshub.com/antony-ch/Eksperimen_SML_AntonyCH.mlflow"
          echo "MLflow tracking URI set to DagsHub."

          # <<< BARIS INI DIHAPUS: python -c "import dagshub; dagshub.init(...)" >>>
          echo "DagsHub initialization script (dagshub.init) skipped; relying on environment variables." # Pesan pengganti
          # Catatan: dagshub library masih harus terinstal agar MLflow bisa berkomunikasi dengan DagsHub.

      - name: Run MLflow Project
        shell: bash -l {0} # Gunakan login shell
        run: |
          conda activate mlflow-project-env # Aktifkan environment lagi untuk step ini
          # Karena modelling.py Anda tidak menerima parameter, gunakan yang ini:
          mlflow run MLProject
          # Jika modelling.py menerima parameter (misalnya dari MLProject Anda):
          # mlflow run MLProject -P alpha=0.5 -P l1_ratio=0.5
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/antony-ch/Eksperimen_SML_AntonyCH.mlflow
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}

      # --- BAGIAN UNTUK SKILLED (3 pts): Menyimpan Artefak ke Repo GitHub ---
      - name: Upload MLflow artifacts to GitHub repo
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-run-artifacts
          path: |
            mlruns/ # MLflow menyimpan artefak di folder mlruns/ di root proyek MLflow Project.
          retention-days: 7

      # --- OPSIONAL UNTUK ADVANCE (4 pts): Build Docker Image (DIKOMENTARI) ---
      # Ini hanya sebagai contoh. Menjalankannya mungkin membutuhkan resources yang besar.
      # Jangan dijalankan jika perangkat lokal Anda tidak mendukung Docker dengan baik.
      # GitHub Actions runners cukup kuat untuk ini, tetapi konfigurasi Docker Hub diperlukan.
      # - name: Build and Push Docker Image
      #   if: always() # Jalankan ini bahkan jika langkah sebelumnya gagal
      #   shell: bash -l {0} # Gunakan login shell
      #   run: |
      #     conda activate mlflow-project-env # Aktifkan environment
      #     # Login ke Docker Hub
      #     echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #     # Build Docker Image dari MLflow Project dan push ke Docker Hub
      #     mlflow build-docker MLProject --model-path "model" --image-name your-dockerhub-username/my-mlflow-model-image:latest --push
      #   env:
      #     MLFLOW_TRACKING_URI: https://dagshub.com/antony-ch/Eksperimen_SML_AntonyCH.mlflow
      #     MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      #     MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}