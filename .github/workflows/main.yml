# Workflow-CI/.github/workflows/main.yml
name: CI/CD MLflow Model Retraining

on:
  push:
    branches:
      - main # Trigger saat ada push ke branch main
  workflow_dispatch: # Memungkinkan trigger manual dari GitHub UI

jobs:
  retrain_model:
    runs-on: ubuntu-latest # Menggunakan runner Ubuntu terbaru

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12.7 # PASTIKAN INI COCOK DENGAN VERSI PYTHON DI MLProject/conda.yaml!
          activate-environment: mlflow-project-env # Nama env dari conda.yaml
          auto-activate-base: false # Hindari aktivasi base env
          auto-update-conda: true # Pastikan conda up-to-date dan terinisialisasi

      - name: Install dependencies from conda.yaml
        # Gunakan login shell untuk memastikan conda terinisialisasi dan environment aktif
        shell: bash -l {0}
        run: |
          conda activate mlflow-project-env
          conda env update --file MLProject/conda.yaml # Menginstal/mengupdate semua dependensi dari conda.yaml
          echo "Conda environment updated successfully."

      - name: Verify installed packages (Debugging Step)
        shell: bash -l {0}
        run: |
          conda activate mlflow-project-env
          echo "--- Conda Packages ---"
          conda list | grep dagshub || true
          conda list | grep mlflow || true
          echo "--- Pip Packages ---"
          pip list | grep dagshub || true
          pip list | grep mlflow || true
          echo "--- All Installed Packages (Conda) ---"
          conda list
          echo "--- All Installed Packages (Pip) ---"
          pip list
          echo "--- Verification complete ---"

      - name: Set DagsHub Environment Variables
        # Variabel lingkungan disetel menggunakan $GITHUB_ENV
        # Ini akan membuat variabel tersedia untuk semua langkah berikutnya dalam job ini.
        # Nama secrets di GitHub (DAGSHUB_USERNAME, DAGSHUB_TOKEN) dipetakan
        # ke nama variabel lingkungan yang dicari MLflow (MLFLOW_TRACKING_USERNAME, MLFLOW_TRACKING_PASSWORD).
        run: |
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.DAGSHUB_USERNAME }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_URI=https://dagshub.com/antony-ch/Eksperimen_SML_AntonyCH.mlflow" >> $GITHUB_ENV
          echo "DagsHub environment variables set for subsequent steps."

      # --- DEBUGGING STEP: VERIFIKASI ENVIRONMENT VARIABLES SEBELUM MLFLOW RUN ---
      - name: Debug - Verify DagsHub Environment Variables
        # Tidak perlu 'shell: bash -l {0}' atau 'conda activate' di sini
        # karena $GITHUB_ENV sudah membuat variabel tersedia untuk shell default.
        run: |
          echo "Verifying MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}"
          echo "Verifying MLFLOW_TRACKING_USERNAME: ${MLFLOW_TRACKING_USERNAME}"
          echo "MLFLOW_TRACKING_PASSWORD variable is set (value will not be printed for security)."
          if [ -z "${MLFLOW_TRACKING_USERNAME}" ] || [ -z "${MLFLOW_TRACKING_PASSWORD}" ] || [ -z "${MLFLOW_TRACKING_URI}" ]; then
              echo "!!! PERINGATAN: Salah satu atau lebih variabel lingkungan DagsHub MLflow tidak disetel. !!!"
              exit 1 # Gagal jika ada yang kosong
          else
              echo "Semua variabel lingkungan DagsHub MLflow tampaknya sudah disetel."
          fi
      # --- AKHIR DEBUGGING STEP ---

      - name: Run MLflow Project
        shell: bash -l {0} # Gunakan login shell
        run: |
          conda activate mlflow-project-env # Pastikan environment aktif
          mlflow run MLProject # Menjalankan proyek MLflow. Variabel lingkungan sudah disetel sebelumnya.

      # --- BAGIAN UNTUK SKILLED (3 pts): Menyimpan Artefak ke Repo GitHub ---
      - name: Upload MLflow artifacts to GitHub repo
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-run-artifacts
          path: |
            mlruns/ # MLflow menyimpan artefak di folder mlruns/ di root proyek MLflow Project.
          retention-days: 7

      # --- OPSIONAL UNTUK ADVANCE (4 pts): Build Docker Image (DIKOMENTARI) ---
      # Ini hanya sebagai contoh. Menjalankannya mungkin membutuhkan resources yang besar.
      # Jangan dijalankan jika perangkat lokal Anda tidak mendukung Docker dengan baik.
      # GitHub Actions runners cukup kuat untuk ini, tetapi konfigurasi Docker Hub diperlukan.
      # - name: Build and Push Docker Image
      #   if: always() # Jalankan ini bahkan jika langkah sebelumnya gagal
      #   shell: bash -l {0} # Gunakan login shell
      #   run: |
      #     conda activate mlflow-project-env # Aktifkan environment
      #     # Login ke Docker Hub
      #     echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #     # Build Docker Image dari MLflow Project dan push ke Docker Hub
      #     mlflow build-docker MLProject --model-path "model" --image-name your-dockerhub-username/my-mlflow-model-image:latest --push
      #   env:
      #     # Variabel lingkungan di sini juga harus diatur jika langkah ini dijalankan secara terpisah
      #     # atau jika ada masalah dengan pewarisan variabel dari $GITHUB_ENV untuk sub-proses Docker.
      #     # Namun, jika langkah sebelumnya berhasil, mereka seharusnya sudah tersedia.
      #     MLFLOW_TRACKING_URI: https://dagshub.com/antony-ch/Eksperimen_SML_AntonyCH.mlflow
      #     MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      #     MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}